{
	debug
	auto_https off
	# log {
	# 	level DEBUG
	# 	output stdout
	# 	format console
	# }
}

http://localhost {
	log default {
		output stdout
		format json
	}

	# handle forward_auth, make jwt middleware (user service) receive GET instead of OPTIONS method
	@preflight method OPTIONS
	handle @preflight {
		header Access-Control-Allow-Origin http://localhost:3000
		header Access-Control-Allow-Methods "GET,POST,OPTIONS,PATCH"
		header Access-Control-Allow-Headers "Authorization,Content-Type"
		# header Access-Control-Allow-Credentials true # if cookies need
		respond 204
	}

	# Public routes (no authentication)
	handle /user/login {
		reverse_proxy demo-user-service-app-1:1323 {
			# CORS can be handler in proxy and in user-service cors handler, just pick only one solution
			# ensure CORS headers from upstream get passed back to client
			# see https://caddyserver.com/docs/caddyfile/directives/reverse_proxy#headers
			# header_down Access-Control-Allow-Origin *
			# header_down Access-Control-Allow-Headers *
			# header_down Access-Control-Allow-Methods *
		}
	}

	# Development url : http://127.0.0.1:5050/pgadmin/browser/ or http://localhost/pgadmin/browser
	handle /pgadmin/* {
		reverse_proxy pgadmin:80 {
			# see more info about X-script: https://www.pgadmin.org/docs/pgadmin4/8.14/container_deployment.html
			header_up X-Script-Name /pgadmin
		}
	}

	# http://localhost/nats-monitor/
	# Becareful in production
	handle_path /nats-monitor/* {
		reverse_proxy nats_server:8222
	}

	# MinIO Web UI: http://localhost/minio-sp/
	handle_path /minio-sp/* {
		reverse_proxy minio-shop-product:9001
	}

	# MinIO API 
	handle_path /minio-sp-api/* {
		reverse_proxy minio-shop-product:9000
	}

	# Protected routes
	handle {
		forward_auth demo-user-service-app-1:1323 {
			uri /user/auth
			copy_headers Authorization X-User-Name X-User-Email X-User-Id X-User-Role
		}

		handle_path /cart/* {
			reverse_proxy demo-cart-service-app-1:1323 {
				# header_up -Authorization # if don't need token
			}
		}

		handle_path /shop-product/* {
			reverse_proxy demo-shop-product-service-app-1:1323 {
				# header_up Authorization
			}
		}

		handle_path /user/* {
			rewrite * /user{uri}
			reverse_proxy demo-user-service-app-1:1323
		}

		handle_path /payment/* {
			reverse_proxy demo-payment-service-app-1:1323
		}

		# Catch all unmatched routes
		handle {
			respond "Gateway - Endpoint Not Found" 404
		}
	}
}
